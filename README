Revisions: 1                   Tomcat Playground                    Éric NICOLAS
Latest: 2025-07-22             =================                     René Mazala

                     *Minimal* set-up for exploratory work
                           with a local Tomcat server

Minimal? -----------------------------------------------------------------------

    Sure. You've never seen a Java project with that few files; hallelujah.

    After you've run it once, you can restart it again in ~1500ms (there's
    quite a bit of overhead in spawning a JVM and encapsulating all operations
    in Docker containers).  If you change the Java code, it'll add some extra
    ~3500ms to recompile.

    You don't even need Java or Tomcat installed, everything's done in Docker:
    edit your files in vi or whatever, and get experimenting!

        .
        ├── README
        ├── Dockerfile
        ├── server.xml
        ├── start.sh
        ├── test.sh
        ├── pom.xml
        └── src/main/java/org/example
            ├── TestServlet.java
            └── TestServletJavax.java

What me do? --------------------------------------------------------------------

    Just edit the Dockerfile, server.xml and TestServlet.java.
    Then, run start.sh: it'll compile your Java servlet and serve it in Tomcat.

    I want a different environment! ................................. Dockerfile

        FROM maven:3-eclipse-temurin-17 AS build
        FROM tomcat:10.0

    I have some funky Tomcat config! ................................ server.xml

        <Valve className="org.apache.catalina.valves.RemoteIpValve"
               httpServerPort="8765"
               httpsServerPort="5678" />

    My servlet should make coffee! ............................ TestServlet.java

        @Override
        protected void doGet(HttpServletRequest req, HttpServletResponse res) throws IOException {
            resp.setStatus(418); // Close enough.
        }

In the box ---------------------------------------------------------------------

    Right now, it's got two servlet configured, which only echo out the request
    URL and the headers.  The only difference between these two is the use of
    javax vs jakarta: if you use tomcat 10 or later in Dockerfile, only the one
    using jakarta will be scanned, and vice-versa using tomcat 9 or earlier.

    You can edit the server.xml.  Right now, it's got a basic RemoteIpValve
    configured.

        curl -H host:mercateo.com -H x-forwarded-proto:https 'http://localhost:8080/test?name=eric'

                              ------------ METHODS ------------
             getRequestURL(): https://mercateo.com/test
             getRemoteAddr(): 172.17.0.1
             getServerName(): mercateo.com
             getServerPort(): 443
                 getScheme(): https
                  isSecure(): true
            getQueryString(): name=eric
                              ------------ HEADERS ------------
                        host: mercateo.com
                  user-agent: curl/8.15.0
                      accept: */*
           x-forwarded-proto: https

Testing ------------------------------------------------------------------------

    Some quick test lines (that pertain to some RemoveIpValve exploration) are
    available in test.sh.

                                                      vim: set tw=80 sw=4 et sta
